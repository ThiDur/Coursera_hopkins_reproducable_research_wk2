install.packages('slidify')
install.packages('ggplot2')
install.packages('KernSmooth')
?KernSmooth
??KernSmooth
a <- download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', 'tmp_housing.csv')
houses <- read.table('tmp_housing.csv', header=TRUE)
houses
houses('va')
houses('VAL')
houses['VAL']
install.packages('xlsx')
install.packages('xlsx')
install.packages('xlsx')
1 = 1
library(tidyverse)
fname <- 'activity.csv'
df <- read.csv(fname)
getwd()
setwd('C:/Users/tdurieux/Documents/Repositories/coursera_repos/Coursera_hopkins_reproducable_research_wk2')
setwd('C:/Users/tdurieux/Documents/Repositories/coursera_repos/Coursera_hopkins_reproducable_research_wk2')
library(tidyverse)
fname <- 'activity.csv'
df <- read.csv(fname)
setwd('C:/Users/tdurieux/Documents/Repositories/coursera_repos/Coursera_hopkins_reproducable_research_wk2')
library(tidyverse)
fname <- 'activity.csv'
df <- read.csv(fname)
tbl <- as_tibble(df)
hist(tbl$steps)
mean(df$steps, na.rm=TRUE)
steps_per_day <- tbl %>%
group_by(date) %>%
summarize(steps_per_day=sum(steps, na.rm=TRUE))
hist(steps_per_day$steps_per_day)
mean(steps_per_day$steps_per_day)
median(steps_per_day$steps_per_day)
steps_per_interval <- tbl %>%
group_by(interval) %>%
summarize(steps=mean(steps, na.rm=TRUE))
index_interval_max <- which(steps_per_interval$steps == max(steps_per_interval$steps))
steps_per_interval$interval[index_interval_max]
sapply(tbl, function(x) sum(is.na(x)))[1]
steps_per_interval
steps_per_interval$steps[steps_per_interval$interval==5]
avg_steps_per_interval <- function(interval){
steps_per_interval$steps[steps_per_interval$interval==interval]
}
steps_per_interval$steps[steps_per_interval$interval==5]
avg_steps_per_interval(5)
tbl
avg_steps_per_interval <- function(interval){
steps_per_interval$steps[steps_per_interval$interval==interval]
}
mutate(tbl, steps2=if(steps==NA){avg_steps_per_interval(interval)} else {steps})
is.na(NA)
avg_steps_per_interval <- function(interval){
steps_per_interval$steps[steps_per_interval$interval==interval]
}
mutate(tbl, steps2=if(is.na(steps)){avg_steps_per_interval(interval)} else {steps})
mutate(tbl, tst = if(is.na(steps)){1} else {2})
a <- mutate(tbl, tst = if(is.na(steps)){1} else {2})
View(a)
avg_steps_per_interval <- function(interval){
steps_per_interval$steps[steps_per_interval$interval==interval]
}
mutate(tbl, steps2 = if_else(is.na(steps), avg_steps_per_interval(interval), steps))
avg_steps_per_interval <- function(interval){
steps_per_interval$steps[steps_per_interval$interval==interval]
}
mutate(tbl, steps2 = if_else(is.na(steps), avg_steps_per_interval(interval), as.double(steps)))
avg_steps_per_interval <- function(interval){
steps_per_interval$steps[steps_per_interval$interval==interval]
}
mutate(tbl, steps2 = if_else(is.na(steps), as.int(avg_steps_per_interval(interval)), steps))
avg_steps_per_interval <- function(interval){
steps_per_interval$steps[steps_per_interval$interval==interval]
}
mutate(tbl, steps2 = if_else(is.na(steps), as.integer(avg_steps_per_interval(interval)), steps))
avg_steps_per_interval <- function(interval){
steps_per_interval$steps[steps_per_interval$interval==interval]
}
mutate(tbl, steps = if_else(is.na(steps), as.integer(avg_steps_per_interval(interval)), steps))
